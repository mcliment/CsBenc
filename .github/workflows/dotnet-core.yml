name: .NET Core

env:
  DOTNET_NOLOGO: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
          distribution: 'zulu'
          java-version: '11'
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: bash
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Install dependencies
      run: dotnet restore

    - name: Build and Analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
          dotnet sonarscanner begin /k:"mcliment_CsBenc" /o:"mcliment" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet build --configuration Release --no-restore --no-incremental
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Test
      run: dotnet test --no-restore --verbosity normal
